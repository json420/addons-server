FROM debian:bookworm

ENV PYTHONDONTWRITEBYTECODE=1

ENV PYTHON_VERSION_MAJOR 3

# Allow scripts to detect we're running in our own container
RUN touch /addons-server-docker-container

RUN apt-get update
RUN apt-get dist-upgrade -y
RUN apt-get install -y \
        # General (dev-) dependencies
        bash-completion \
        build-essential \
        curl \
        libjpeg-dev \
        libsasl2-dev \
        libxml2-dev \
        libxslt-dev \
        locales \
        zlib1g-dev \
        libffi-dev \
        libssl-dev \
        libmagic-dev \
        nodejs \
        npm \
        # Git, because we're using git-checkout dependencies
        git \
        # Dependencies for mysql-python
        default-mysql-client \
        default-libmysqlclient-dev \
        swig \
        gettext \
        # Use rsvg-convert to render our static theme previews
        librsvg2-bin \
        # Use pngcrush to optimize the PNGs uploaded by developers
        pngcrush \
        # our makefile and ui-tests require uuid to be installed
        uuid \
        # Use libmaxmind for speedy geoip lookups
        libmaxminddb0 \
        libmaxminddb-dev \
        ######## From dev.txt
        python3-pyinotify \
        python3-ipdb \
        python3-ipython \
        python3-watchdog \
        # [Skipping all the ipython deps, handled by Debian]
        # Is python3-meld3 needed? It no longer seems to be a dependency of supervisor
        python3-meld3 \
        ######## From dev_without_hashes.txt
        supervisor \
        ######## From docs.txt
        # python3-jinja2 \# Dependency of python3-sphinx, handled by Debian
        # python3-pygments \# Dependency of python3-sphinx, handled by Debian
        python3-sphinx \
        # python3-alabaster \ Dependency of python3-sphinx, handled by Debian
        # python3-babel \ Dependency of python3-sphinx, handled by Debian
        # python3-docutils \ Dependency of python3-sphinx, handled by Debian
        # python3-imagesize \ Dependency of python3-sphinx, handled by Debian
        python3-markupsafe \
        # python3-tz \ Dependency of python3-sphinx (via python3-babel), handled by Debian
        # python3-requests \ Dependency of python3-sphinx, handled by Debian
        python3-sphinxcontrib.httpdomain \
        python3-sphinx-rtd-theme \
        # is typing python3-typing-extensions, python3-typing-inspect? Whatever, handled by Debian (I think).
        python3-sphinxcontrib.websupport \
        # python3-snowballstemmer \ Dependency of python3-sphinx, handled by Debian
        python3-chardet \
        ######## From system.txt
        python3-appdirs \
        python3-asn1crypto \
        python3-certifi \
        # python3-cffi \ Dependency of python3-cryptography, handled by Debian
        # python3-cryptography \ Dependendy of python3-openssl, handled by Debian
        # enum34 equivalent is in standandard library now
        python3-idna \
        # ipaddress is included in python3 in ipaddress module
        python3-ndg-httpsclient \
        python3-packaging \
        # python3-pip \ No pipping! ;P
        python3-openssl \
        # python3-pycparser \ Indirect dependency of python3-openssl, handled by Debian
        python3-pyasn1 \
        # python3-pyparsing \ Dependency of python3-packaging, handled by Debian
        python3-setuptools \
        # Don't need no stinkin' `six` :P
        python3-urllib3 \
        python3-django-uwsgi

#RUN rm -rf /var/lib/apt/lists/*

#ADD http://geolite.maxmind.com/download/geoip/database/GeoLite2-Country.mmdb.gz /tmp

#RUN mkdir -p /usr/local/share/GeoIP \
# && gunzip -c /tmp/GeoLite2-Country.mmdb.gz > /usr/local/share/GeoIP/GeoLite2-Country.mmdb \
# && rm -f /tmp/GeoLite2-Country.mmdb.gz

# Compile required locale
RUN localedef -i en_US -f UTF-8 en_US.UTF-8

# Set the locale. This is mainly so that tests can write non-ascii files to
# disk.
ENV LANG en_US.UTF-8
ENV LC_ALL en_US.UTF-8

COPY . /code
WORKDIR /code

ENV PIP_BUILD=/deps/build/
ENV PIP_CACHE_DIR=/deps/cache/
ENV PIP_SRC=/deps/src/
ENV NPM_CONFIG_PREFIX=/deps/
ENV SWIG_FEATURES="-D__x86_64__"

# json420 thinks it would be a really good idea to use the packages from debian if possible
# Install all python requires
#RUN mkdir -p /deps/{build,cache,src}/ && \
#    ln -s /code/package.json /deps/package.json && \
#    make update_deps && \
#    rm -rf /deps/build/ /deps/cache/

# Preserve bash history across image updates.
# This works best when you link your local source code
# as a volume.
ENV HISTFILE /code/docker/artifacts/bash_history

# Configure bash history.
ENV HISTSIZE 50000
ENV HISTIGNORE ls:exit:"cd .."

# This prevents dupes but only in memory for the current session.
ENV HISTCONTROL erasedups

ENV CLEANCSS_BIN /deps/node_modules/.bin/cleancss
ENV LESS_BIN /deps/node_modules/.bin/lessc
ENV UGLIFY_BIN /deps/node_modules/.bin/uglifyjs
ENV ADDONS_LINTER_BIN /deps/node_modules/.bin/addons-linter
RUN npm cache clean -f && npm install -g n && /deps/bin/n 16
